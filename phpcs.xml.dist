<?xml version="1.0"?>
<ruleset name="PSR2-XMF">
    <!--
	#############################################################################
	COMMAND LINE ARGUMENTS
	https://github.com/squizlabs/PHP_CodeSniffer/wiki/Annotated-ruleset.xml
	#############################################################################
	-->
    <!-- Check up to 8 files simultanously. -->
    <arg name="parallel" value="8"/>
    <!-- Only check the PHP files. JS, CSS, SCSS files are checked separately -->
    <arg name="extensions" value="php"/>
    <file>.</file>
    <!-- Show progress and sniff codes in all reports -->
    <exclude-pattern>*/node_modules/*</exclude-pattern>
    <exclude-pattern>*/vendor/*</exclude-pattern>
    <exclude-pattern>*/bin/*</exclude-pattern>
    <exclude-pattern>*/release/*</exclude-pattern>
    <exclude-pattern>assets/*</exclude-pattern>
    <exclude-pattern>tests/*</exclude-pattern>
    <exclude-pattern>phpdocs/*</exclude-pattern>
    <description>PSR2 standard rules for Xmf</description>
    <exclude-pattern>*/_archive/*</exclude-pattern>
    <exclude-pattern>*/assets/*</exclude-pattern>
    <exclude-pattern>*/assets-src/*</exclude-pattern>
    <exclude-pattern>*/docs/*</exclude-pattern>
    <exclude-pattern>*/tests/*</exclude-pattern>
    <exclude-pattern>*/unit/*</exclude-pattern>
    <!-- Include the whole PSR-2 standard -->
    <rule ref="PSR2"></rule>
    <rule ref="Squiz.Classes.ClassFileName.NoMatch">
        <exclude-pattern>*/tests/*</exclude-pattern>
    </rule>
    <!-- We need sideeffects for WordPress safety (test if ABSPATH is defined) -->
    <rule ref="PSR1.Files.SideEffects">
        <severity>0</severity>
    </rule>
    <!-- Some lines have to be longer, makes no sense to shortem them -->
    <rule ref="Generic.Files.LineLength">
        <severity>0</severity>
    </rule>
    <!-- Add in some extra rules from other standards. -->
    <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter"/>
    <rule ref="Generic.Commenting.Todo"/>
    <rule ref="Generic.Commenting"/>
    <!--
	#############################################################################
	USE THE PHPCompatibility RULESET
	#############################################################################
	-->
    <config name="testVersion" value="5.6"/>
    <rule ref="PHPCompatibility">
        <!-- Whitelist PHP native classes, interfaces, functions and constants which
			 are back-filled by WP.
			 Based on:
			 * /wp-includes/compat.php
			 * /wp-includes/random_compat/random.php
		-->
        <exclude name="PHPCompatibility.PHP.NewClasses.errorFound"/>
        <exclude name="PHPCompatibility.PHP.NewClasses.typeerrorFound"/>
        <exclude name="PHPCompatibility.PHP.NewConstants.json_pretty_printFound"/>
        <exclude name="PHPCompatibility.PHP.NewConstants.php_version_idFound"/>
        <exclude name="PHPCompatibility.PHP.NewFunctions.hash_equalsFound"/>
        <exclude name="PHPCompatibility.PHP.NewFunctions.json_last_error_msgFound"/>
        <exclude name="PHPCompatibility.PHP.NewFunctions.random_intFound"/>
        <exclude name="PHPCompatibility.PHP.NewFunctions.random_bytesFound"/>
        <exclude name="PHPCompatibility.PHP.NewFunctions.array_replace_recursiveFound"/>
        <exclude name="PHPCompatibility.PHP.NewInterfaces.jsonserializableFound"/>
    </rule>
    <!-- Whitelist the WP Core mysql_to_rfc3339() function. -->
    <rule ref="PHPCompatibility.PHP.RemovedExtensions">
        <properties>
            <property name="functionWhitelist" type="array" value="mysql_to_rfc3339"/>
        </properties>
    </rule>
</ruleset>
